Installing Packages   Python Packaging User Guide Navigation index next   previous   PyPA   Python Packaging User Guide   Tutorials     Installing Packages  This section covers basics install Python packages  It s important note term  package  context used synonym distribution  i e  bundle software installed   refer kind package import Python source code  i e  container modules   It common Python community refer distribution using term  package   Using term  distribution  often preferred  easily confused Linux distribution  another larger software distribution like Python itself  Contents Requirements Installing Packages Install pip  setuptools  wheel Optionally  Create virtual environment Creating Virtual Environments Use pip Installing Installing PyPI Source Distributions vs Wheels Upgrading packages Installing User Site Requirements files Installing VCS Installing Indexes Installing local src tree Installing local archives Installing sources Installing Prereleases Installing Setuptools  Extras  Requirements Installing Packages  This section describes steps follow installing Python packages  Install pip  setuptools  wheel  If Python           Python         installed python org  already pip setuptools  need upgrade latest version  On Linux macOS  pip install  U pip setuptools On Windows  python  m pip install  U pip setuptools If you re using Python install Linux that s managed system package manager  e g  yum    apt get  etc    want use system package manager install upgrade pip  see Installing pip setuptools wheel Linux Package Managers Otherwise  Securely Download get pip py     Run python get pip py      This install upgrade pip  Additionally  install setuptools wheel they re installed already  Warning Be cautious you re using Python install that s managed operating system another package manager  get pip py coordinate tools  may leave system inconsistent state  You use python get pip py   prefix  usr local  install  usr local designed locally installed software  Optionally  Create virtual environment  See section details  here s basic commands  Using virtualenv  pip install virtualenv virtualenv  DIR  source  DIR  bin activate Using venv      python   m venv  DIR  source  DIR  bin activate Creating Virtual Environments  Python  Virtual Environments  allow Python packages installed isolated location particular application  rather installed globally  Imagine application needs version   LibFoo  another application requires version    How use applications  If install everything  usr lib python    site packages  or whatever platform s standard location is   it s easy end situation unintentionally upgrade application shouldn t upgraded  Or generally  want install application leave be  If application works  change libraries versions libraries break application  Also  can t install packages global site packages directory  For instance  shared host  In cases  virtual environments help you  They installation directories don t share libraries virtual environments  Currently  two viable tools creating Python virtual environments  venv available default Python     later  installs pip setuptools created virtual environments Python     later  virtualenv needs installed separately  supports Python      Python       pip  setuptools wheel always installed created virtual environments default  regardless Python version   The basic usage like so  Using virtualenv  virtualenv  DIR  source  DIR  bin activate Using venv  python   m venv  DIR  source  DIR  bin activate For information  see virtualenv docs venv docs  Use pip Installing  pip recommended installer  Below  we ll cover common usage scenarios  For detail  see pip docs  includes complete Reference Guide  There cases might want use easy install instead pip  For details  see pip vs easy install  Installing PyPI  The common usage pip install Python Package Index using requirement specifier  Generally speaking  requirement specifier composed project name followed optional version specifier  PEP     contains full specification currently supported specifiers  Below examples  To install latest version  SomeProject   pip install  SomeProject  To install specific version  pip install  SomeProject       To install greater equal one version less another  pip install  SomeProject        To install version that s  compatible  certain version      pip install  SomeProject         In case  means install version           version that s also            Source Distributions vs Wheels  pip install either Source Distributions  sdist  Wheels  present PyPI  pip prefer compatible wheel  Wheels pre built distribution format provides faster installation compared Source Distributions  sdist   especially project contains compiled extensions  If pip find wheel install  locally build wheel cache future installs  instead rebuilding source distribution future  Upgrading packages  Upgrade already installed SomeProject latest PyPI  pip install   upgrade SomeProject Installing User Site  To install packages isolated current user  use   user flag  pip install   user SomeProject For information see User Installs section pip docs  Requirements files  Install list requirements specified Requirements File  pip install  r requirements txt Installing VCS  Install project VCS  editable  mode  For full breakdown syntax  see pip s section VCS Support  pip install  e git https   git repo some pkg git egg SomeProject   git pip install  e hg https   hg repo some pkg egg SomeProject   mercurial pip install  e svn svn   svn repo some pkg trunk  egg SomeProject   svn pip install  e git https   git repo some pkg git feature egg SomeProject   branch Installing Indexes  Install alternate index pip install   index url http   my package repo simple  SomeProject Search additional index install  addition PyPI pip install   extra index url http   my package repo simple SomeProject Installing local src tree  Installing local src Development Mode  i e  way project appears installed  yet still editable src tree  pip install  e  path  You also install normally src pip install  path  Installing local archives  Install particular source archive file  pip install   downloads SomeProject       tar gz Install local directory containing archives  and don t check PyPI  pip install   no index   find links file    local dir  SomeProject pip install   no index   find links  local dir  SomeProject pip install   no index   find links relative dir  SomeProject Installing sources  To install data sources  for example Amazon S  storage  create helper application presents data PEP     compliant index format  use   extra index url flag direct pip use index    s helper   port      pip install   extra index url http   localhost      SomeProject Installing Prereleases  Find pre release development versions  addition stable versions  By default  pip finds stable versions  pip install   pre SomeProject Installing Setuptools  Extras   Install setuptools extras    pip install SomePackage PDF    pip install SomePackage PDF         pip install  e   PDF         editable project current directory     Secure  context means using modern browser tool like curl verifies SSL certificates downloading https URLs     Depending platform  may require root Administrator access  pip currently considering changing making user installs default behavior     Beginning Python      venv  a stdlib alternative virtualenv  create virtualenv environments pip pre installed  thereby making equal alternative virtualenv     The compatible release specifier accepted PEP     support released setuptools v    pip v    Table Of Contents Tutorials Installing Packages Packaging Distributing Projects Guides Discussions PyPA Specifications Project Summaries Glossary How Get Support Contribute guide Previous topic Tutorials Next topic Packaging Distributing Projects Navigation index next   previous   PyPA   Python Packaging User Guide   Tutorials       Copyright            PyPA  The Python Software Foundation non profit corporation  Please donate  Last updated Oct           Found bug  Created using Sphinx       